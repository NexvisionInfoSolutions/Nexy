@model LoanManagementSystem.Models.sdtoUser

@{
    ViewBag.Title = "Create a Member";

}

@*<h2>Create a Member</h2>
*@

<script language="javascript" type="text/javascript">
    function loadCountryStates(selectedValue, ddlUserAddressState) {
        $.ajax({
            url: '@Url.Action("StateInfo","Settings", new {CountryId = 0 })' + selectedValue,
            type: 'GET',
            //data: { someValue: value },
            success: function (result) {
                // when the AJAX succeeds refresh the dropdown list with 
                // the JSON values returned from the controller action

                var selectedDeviceModel = $('#' + ddlUserAddressState);
                selectedDeviceModel.empty();
                $.each(result, function (index, item) {
                    selectedDeviceModel.append(
                        $('<option/>', {
                            value: item.StateId,
                            text: item.StateName
                        })
                    );
                });
            }
        });
        return false;
    }

</script>

@using (Html.BeginForm("Create", "Member", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.CompanyId)
    <div class="col-md-5">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4>User Details</h4>
            </div>
            <div class="panel-body">
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.LabelFor(m => m.Code)
                        @Html.TextBoxFor(m => m.Code, new { @class = "form-control", @placeholder = "Enter code" })
                        @Html.ValidationMessageFor(m => m.Code)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.FirstName, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @placeholder = "Enter 'First Name" })
                        @Html.ValidationMessageFor(model => model.FirstName)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.LastName, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @placeholder = "Enter Last Name" })
                        @Html.ValidationMessageFor(model => model.LastName)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.Label("Profile Image", new { @class = "control-label" })
                        <input name="ProfileImage" type="file" class="form-control" />
                        @*@Html.TextBoxFor(m => m.Logo, new { type = "file" })*@
                        @*@Html.ValidationMessageFor(model => model.CompanyName)*@
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Description, "Remarks", new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @placeholder = "Enter Description" })
                        @Html.ValidationMessageFor(model => model.Description)
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.UserGroupId, "UserGroupId", new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("UserGroupId", String.Empty)
                            @Html.ValidationMessageFor(model => model.UserGroupId)
                        </div>
                </div>
                *@

                @*<div class="form-group">
                    @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.IsActive)
                            @Html.ValidationMessageFor(model => model.IsActive)
                        </div>
                </div>
                *@

                @*<div class="form-group">
                    @Html.LabelFor(model => model.Designation, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Designation)
                            @Html.ValidationMessageFor(model => model.Designation)
                        </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserType, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UserType)
                            @Html.ValidationMessageFor(model => model.UserType)
                        </div>
                </div>
                *@
            </div>
        </div>


    </div>
<div class="col-md-5">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4>Communication Address</h4>
        </div>
        <div class="panel-body">
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.UserAddress.Address1, "Address1", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.UserAddress.Address1, new { @class = "form-control", @placeholder = "Enter Address Line 1" })
                        @Html.ValidationMessageFor(model => model.UserAddress.Address1)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.UserAddress.Address2, "Address2", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.UserAddress.Address2, new { @class = "form-control", @placeholder = "Enter Address Line 2" })
                        @Html.ValidationMessageFor(model => model.UserAddress.Address2)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.UserAddress.Place, "Place", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.UserAddress.Place, new { @class = "form-control", @placeholder = "Enter Place" })
                        @Html.ValidationMessageFor(model => model.UserAddress.Place)
                </div>
            </div>
            <div class="form-group">

                <div class="col-md-10">
                    @Html.LabelFor(model => model.UserAddress.Post, "PO", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.UserAddress.Post, new { @class = "form-control", @placeholder = "Enter PO" })
                        @Html.ValidationMessageFor(model => model.UserAddress.Post)
                </div>
            </div>   
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.UserAddress.District, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.UserAddress.District, new { @class = "form-control", @placeholder = "Enter District" })
                    @Html.ValidationMessageFor(model => model.UserAddress.District)
                </div>
            </div>         
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.UserAddress.Taluk , new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.UserAddress.Taluk, new { @class = "form-control", @placeholder = "Enter Taluk" })
                        @Html.ValidationMessageFor(model => model.UserAddress.Taluk)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.UserAddress.Village, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.UserAddress.Village, new { @class = "form-control", @placeholder = "Enter Village" })
                    @Html.ValidationMessageFor(model => model.UserAddress.Village)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.UserAddress.CountryId , "Country", new { @class = "control-label" })
                        @Html.DropDownListFor(model=>model.UserAddress.CountryId, (SelectList)ViewBag.UserAddressCountryList, htmlAttributes: new { @class = "form-control",  @ID = "ddlUserAddressCountry" , onchange = "return loadCountryStates(this.options[this.selectedIndex].value, 'ddlUserAddressState');" })
                        @Html.ValidationMessageFor(model => model.UserAddress.CountryId)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.UserAddress.StateId , "State", new { @class = "control-label" })
                        @Html.DropDownListFor(model=>model.UserAddress.StateId, (SelectList)ViewBag.StateList, htmlAttributes: new { @class = "form-control",  @ID = "ddlUserAddressState" })
                        @Html.ValidationMessageFor(model => model.UserAddress.StateId)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.FatherName, "Fathers Name", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.FatherName, new { @class = "form-control", @placeholder = "Enter Father's Name" })
                        @Html.ValidationMessageFor(model => model.FatherName)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.Contacts.Telephone1, "Phone", new { @class = "control-label col-md-2" })
                        @Html.TextBoxFor(model => model.Contacts.Telephone1, new { @class = "form-control", @placeholder = "Enter Phone" })
                        @Html.ValidationMessageFor(model => model.Contacts.Telephone1)
                </div>
            </div>
        </div>
    </div>
</div>
<div class="col-md-5">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4>Permanent Address</h4>
        </div>
        <div class="panel-body">
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.PermanentAddress.Address1, "Address1", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.PermanentAddress.Address1, new { @class = "form-control", @placeholder = "Enter Address Line 1" })
                        @Html.ValidationMessageFor(model => model.PermanentAddress.Address1)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.PermanentAddress.Address2, "Address2", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.PermanentAddress.Address2, new { @class = "form-control", @placeholder = "Enter Address Line 2" })
                        @Html.ValidationMessageFor(model => model.PermanentAddress.Address2)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.PermanentAddress.Place, "Place", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.PermanentAddress.Place, new { @class = "form-control", @placeholder = "Enter Place" })
                        @Html.ValidationMessageFor(model => model.PermanentAddress.Place)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.PermanentAddress.Post, "PO", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.PermanentAddress.Post, new { @class = "form-control", @placeholder = "Enter PO" })
                        @Html.ValidationMessageFor(model => model.PermanentAddress.Post)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.PermanentAddress.District, "District", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.PermanentAddress.District, new { @class = "form-control", @placeholder = "Enter District" })
                        @Html.ValidationMessageFor(model => model.PermanentAddress.District)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.PermanentAddress.Taluk , new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.PermanentAddress.Taluk, new { @class = "form-control", @placeholder = "Enter Taluk" })
                        @Html.ValidationMessageFor(model => model.PermanentAddress.Taluk)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.PermanentAddress.Village, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.PermanentAddress.Village, new { @class = "form-control", @placeholder = "Enter Village" })
                    @Html.ValidationMessageFor(model => model.PermanentAddress.Village)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.PermanentAddress.CountryId , "Country", new { @class = "control-label" })
                        @Html.DropDownListFor(model=>model.PermanentAddress.CountryId, (SelectList)ViewBag.PermanentAddressCountryList, htmlAttributes: new { @class = "form-control",  @ID = "ddlPermanentAddressCountry" , onchange = "return loadCountryStates(this.options[this.selectedIndex].value, 'ddlPermanentAddressState');" })
                        @Html.ValidationMessageFor(model => model.PermanentAddress.CountryId)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.PermanentAddress.StateId , "State", new { @class = "control-label" })
                        @Html.DropDownListFor(model=>model.PermanentAddress.StateId, (SelectList)ViewBag.StateList, htmlAttributes: new { @class = "form-control",  @ID = "ddlPermanentAddressState" })
                        @Html.ValidationMessageFor(model => model.PermanentAddress.StateId)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.PermanentContacts.Telephone1, "Phone", new { @class = "control-label col-md-2" })
                        @Html.TextBoxFor(model => model.PermanentContacts.Telephone1, new { @class = "form-control", @placeholder = "Enter Phone" })
                        @Html.ValidationMessageFor(model => model.PermanentContacts.Telephone1)
                </div>
            </div>
        </div>
    </div>
</div>
<div class="col-md-5">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4>Guaranter Details</h4>
        </div>
        <div class="panel-body">
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.GuaranterName, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.GuaranterName, new { @class = "form-control", @placeholder = "Enter Guaranter Name" })
                        @Html.ValidationMessageFor(model => model.GuaranterName)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.GuaranterAddress.Address1, "Address", new { @class = "control-label col-md-2" })
                        @Html.TextBoxFor(model => model.GuaranterAddress.Address1, new { @class = "form-control", @placeholder = "Enter Address" })
                        @Html.ValidationMessageFor(model => model.GuaranterAddress.Address1)
                </div>
            </div>
<div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.GuaranterAddress.Address2, "Address2", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.GuaranterAddress.Address2, new { @class = "form-control", @placeholder = "Enter Address Line 2" })
                        @Html.ValidationMessageFor(model => model.GuaranterAddress.Address2)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.GuaranterAddress.Place, "Place", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.GuaranterAddress.Place, new { @class = "form-control", @placeholder = "Enter Place" })
                        @Html.ValidationMessageFor(model => model.GuaranterAddress.Place)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.GuaranterAddress.Post, "PO", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.GuaranterAddress.Post, new { @class = "form-control", @placeholder = "Enter PO" })
                        @Html.ValidationMessageFor(model => model.GuaranterAddress.Post)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.GuaranterAddress.District, "District", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.GuaranterAddress.District, new { @class = "form-control", @placeholder = "Enter District" })
                        @Html.ValidationMessageFor(model => model.GuaranterAddress.District)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.GuaranterAddress.Taluk , new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.GuaranterAddress.Taluk, new { @class = "form-control", @placeholder = "Enter Taluk" })
                        @Html.ValidationMessageFor(model => model.GuaranterAddress.Taluk)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.GuaranterAddress.Village, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.GuaranterAddress.Village, new { @class = "form-control", @placeholder = "Enter Village" })
                    @Html.ValidationMessageFor(model => model.GuaranterAddress.Village)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.GuaranterAddress.CountryId , "Country", new { @class = "control-label" })
                        @Html.DropDownListFor(model=>model.GuaranterAddress.CountryId, (SelectList)ViewBag.GuaranterAddressCountryList, htmlAttributes: new { @class = "form-control", @ID = "ddlGuaranterAddressCountry" , onchange = "return loadCountryStates(this.options[this.selectedIndex].value, 'ddlGuaranterAddressState');" })
                        @Html.ValidationMessageFor(model => model.GuaranterAddress.CountryId)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.GuaranterAddress.StateId , "State", new { @class = "control-label" })
                        @Html.DropDownListFor(model=>model.GuaranterAddress.StateId, (SelectList)ViewBag.StateList, htmlAttributes: new { @class = "form-control", @ID = "ddlGuaranterAddressState" })
                        @Html.ValidationMessageFor(model => model.GuaranterAddress.StateId)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.GuaranterContacts.Telephone1, "Phone", new { @class = "control-label col-md-2" })
                        @Html.TextBoxFor(model => model.GuaranterContacts.Telephone1, new { @class = "form-control", @placeholder = "Enter Phone" })
                        @Html.ValidationMessageFor(model => model.GuaranterContacts.Telephone1)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.Occupation, "Occupation", new { @class = "control-label col-md-2" })
                        @Html.TextBoxFor(model => model.Occupation, new { @class = "form-control", @placeholder = "Enter Occupation" })
                        @Html.ValidationMessageFor(model => model.Occupation)
                </div>
            </div>
        </div>
    </div>
</div>
<div class="col-md-5">
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
