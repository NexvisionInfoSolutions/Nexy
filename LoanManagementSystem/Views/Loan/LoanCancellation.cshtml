@model Data.Models.Accounts.sdtoLoanInfo

@{
    ViewBag.Title = "Loan Cancellation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
   
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal"> 
            <hr />
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.LoanId)
            @Html.HiddenFor(model => model.Status) 
            @Html.HiddenFor(model => model.UserId)

            
    
               <div class="form-group">
                    @Html.LabelFor(model => model.LoanId, "Loan No", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.LoanId,new { disabled = "disabled", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.LoanId)*@
                        @Html.TextBoxFor(model => model.LoanId, new { disabled = "disabled", @readonly = "readonly" })
                    </div>
                </div>
      
            <div class="form-group">
                @Html.LabelFor(model => model.LoanAmount, "Loan Amount", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.LoanAmount, new { disabled = "disabled", @readonly = "readonly" }) 
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InteresRate, "Interest Rate", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.InteresRate, new { disabled = "disabled", @readonly = "readonly" }) 
                </div>
            </div>
            
            <div class="form-group">
                <label class="control-label col-md-2" for="PaidAmount">Paid Amount</label>
                <div class="col-md-10">
                    <input data-val="true" data-val-number="The field Paid Amount must be a number." v disabled="disabled" id="PaidAmount" name="PaidAmount" readonly="readonly" type="text" value=@ViewData["PaidAmount"]>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2" for="PaidAmount">Balance Amount</label>
                <div class="col-md-10">
                    <input data-val="true" data-val-number="The field Balance Amount must be a number." v disabled="disabled" id="BalanceAmount" name="BalanceAmount" readonly="readonly" type="text" value=@ViewData["BalaceAmount"]>
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.TotalInstallments, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TotalInstallments)
                    @Html.ValidationMessageFor(model => model.TotalInstallments)
                </div>
            </div>*@
    
            @*<div class="form-group">
                @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status)
                </div>
            </div>*@
    
            
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Cancel this Loan" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
