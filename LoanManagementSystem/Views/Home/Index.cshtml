@model LoanManagementSystem.Models.sdtoViewReportFilter

@{
    ViewBag.Title = "Home Page - Dashboard";
}

@section scripts {
    <script type="text/javascript">
        function Search() {
            $(document).ready(function () {
                // prepare the data

                var UserIds = [];
                var LoanIds = [];
                var DepositIds = [];

                var source =
                {
                    dataType: "json",
                    dataFields: [
                        { name: 'DepositId', type: 'number' },
                        { name: 'UserId', type: 'number' },
                        { name: 'DepositAmount', type: 'number' },
                        { name: 'InteresRate', type: 'number' },
                        //{ name: 'InstallmentAmount', type: 'number' },
                        { name: 'MaturityDate', type: 'date' },
                        { name: 'MatureAmount', type: 'number' },
                        { name: 'TotalWithdrawnAmountPerDeposit', type: 'number' },
                        { name: 'TotalWithdrawnAmountPerUser', type: 'number' },
                        { name: 'BalanceDepositAmount', type: 'number' },
                        //{ name: 'BalanceLoanInstallments', type: 'number' },
                        { name: 'TotalInterestPaidAmountPerDeposit', type: 'number' },
                        { name: 'TotalInterestPaidAmountPerUser', type: 'number' },
                        //{ name: 'TotalInstallments', type: 'number' },
                        { name: 'FirstName', type: 'string' },
                        { name: 'LastName', type: 'string' },
                        { name: 'FatherName', type: 'string' },
                        { name: 'GuaranterName', type: 'string' },
                        { name: 'UserAddress', type: 'string' },
                        { name: 'UserPhone', type: 'string' },
                        { name: 'UserMobile', type: 'string' },
                        { name: 'UserEmail', type: 'string' },
                        { name: 'UserPermanentAddress', type: 'string' },
                        { name: 'PermanentPhone', type: 'string' },
                        { name: 'PermanentMobile', type: 'string' },
                        { name: 'PermanentEmail', type: 'string' }
                    ],
                    id: 'LoanId',
                    url: '/Reports/DepositSummaryInfo',
                    data: {
                        CompanyId: "1",
                        StartDate: "25-06-2015",
                        EndDate: "25-06-2015",
                    }
                };

                var linkDeposit = function (row, column, value) {
                    var html = '<b><a target="_blank" href="/Deposit/Withdrawals?DepositId=' + value + '">' + value + '</a>';
                    return html;
                }
                var dataAdapter = new $.jqx.dataAdapter(source);
                // create Tree Grid
                var gridInfo = $("#dataTableDeposit").jqxDataTable(
                {
                    width: 450,
                    source: dataAdapter,
                    theme: 'arctic',
                    pageSize: 5,
                    sortable: true,
                    filterable: true,
                    pageable: true,
                    columns: [
                      //{ text: 'User Id', dataField: 'UserID', width: 120 },
                      { text: 'Deposit#', dataField: 'DepositId', width: 120, cellsRenderer: linkDeposit },
                      { text: 'First Name', dataField: 'FirstName', width: 160 },
                      { text: 'Last Name', dataField: 'LastName', width: 160 },
                      { text: 'Total Amount Paid On Deposit', dataField: 'TotalWithdrawnAmountPerDeposit', width: 150 },
                      { text: 'Total Amount Paid By User', dataField: 'TotalWithdrawnAmountPerUser', width: 150 },
                      { text: 'Total Interest Amount Paid On Loan', dataField: 'TotalInterestPaidAmountPerDeposit', width: 150 },
                      { text: 'Total Interest Amount Paid By User', dataField: 'TotalInterestPaidAmountPerUser', width: 150 }
                    ]
                });

                // prepare the data
                var source =
                {
                    dataType: "json",
                    dataFields: [
                        { name: 'LoanId', type: 'number' },
                        { name: 'InstallmentAmount', type: 'number' },
                        { name: 'TotalPaidAmountPerLoan', type: 'number' },
                        { name: 'TotalPaidAmountPerUser', type: 'number' },
                        { name: 'BalanceLoanAmount', type: 'number' },
                        { name: 'BalanceLoanInstallments', type: 'number' },
                        { name: 'TotalInterestPaidAmountPerLoan', type: 'number' },
                        { name: 'TotalInterestPaidAmountPerUser', type: 'number' },
                        { name: 'TotalInstallments', type: 'number' },
                        { name: 'FirstName', type: 'string' },
                        { name: 'LastName', type: 'string' },
                    ],
                    id: 'LoanId',
                    url: '/Reports/LoanSummaryInfo'
                };

                var linkLoan = function (row, column, value) {
                    var html = '<b><a target="_blank" href="/LoanRepayments/Index?LoanId=' + value + '">' + value + '</a>';
                    return html;
                }
                var dataAdapter = new $.jqx.dataAdapter(source);
                // create Tree Grid
                var gridInfo = $("#dataTableLoan").jqxDataTable(
                {
                    width: 450,
                    source: dataAdapter,
                    theme: 'arctic',
                    pageSize: 5,
                    sortable: true,
                    filterable: true,
                    pageable: true,
                    columns: [
                      //{ text: 'User Id', dataField: 'UserID', width: 120 },
                      { text: 'Loan', dataField: 'LoanId', width: 120, cellsRenderer: linkLoan },
                      { text: 'First Name', dataField: 'FirstName', width: 160 },
                      { text: 'Last Name', dataField: 'LastName', width: 160 },
                      { text: 'Father Name', dataField: 'FatherName', width: 150 },
                      { text: 'Loan Amount', dataField: 'LoanAmount', width: 150 },
                      { text: 'Total Installments', dataField: 'TotalInstallments', width: 150 },
                      { text: 'Pending Installments', dataField: 'BalanceLoanInstallments', width: 150 },
                      { text: 'Interest Rate', dataField: 'InteresRate', width: 150 },
                      { text: 'Installment Amount', dataField: 'InstallmentAmount', width: 150 },
                      { title: 'Total Amount Paid On Loan', text: 'Total Amount Paid On Loan', dataField: 'TotalPaidAmountPerLoan', width: 150 },
                      { text: 'Total Amount Paid By User', dataField: 'TotalPaidAmountPerUser', width: 150 },
                      { text: 'Total Interest Amount Paid On Loan', dataField: 'TotalInterestPaidAmountPerLoan', width: 150 },
                      { text: 'Total Interest Amount Paid By User', dataField: 'TotalInterestPaidAmountPerUser', width: 150 },
                      { text: 'Guaranter', dataField: 'GuaranterName', width: 150 },
                      { text: 'Communication Address', dataField: 'UserAddress', width: 150 },
                      { text: 'Phone', dataField: 'UserPhone', width: 150 },
                      { text: 'Permanent Address', dataField: 'UserPermanentAddress', width: 150 },
                      { text: 'Permanent Address Phone', dataField: 'PermanentPhone', width: 150 },
                    ]
                });
            });
        }
    </script>
}

 @using (Html.BeginForm("Index", "Home"))
{
    @Html.AntiForgeryToken()
@Html.

    <div class="col-md-3 form-horizontal">
        @Html.ValidationSummary(true)
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(m => m.Accounts, new { @class = "control-label" })
                <br />
                @Html.CheckBoxListFor(model => model.Accounts.PostedItems.AccountIds,
                model => model.Accounts.Items,
                fruit => fruit.Value,
                fruit => fruit.Text,
                model => model.Accounts.SelectedItems,
                MvcCheckBoxList.Model.Position.Vertical, x => new { @class = "control-label checkbox-list-loans" })
                @Html.ValidationMessageFor(m => m.Accounts)
            </div>
        </div>
    </div>
<div class="col-md-3 form-horizontal">
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(m => m.StartDate)
                @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control date-picker", @placeholder = "Select a start date" })
                @Html.ValidationMessageFor(m => m.StartDate)
        </div>
    </div>
</div>
<div class="col-md-3 form-horizontal">
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(m => m.EndDate)
                @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control date-picker", @placeholder = "Select a start date" })
                @Html.ValidationMessageFor(m => m.EndDate)
        </div>
    </div>
</div>
<div class="col-md-3 form-horizontal">
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(m => m.Accounts, new { @class = "control-label" })
                <br />
            @Html.CheckBoxListFor(model => model.Accounts.PostedItems.AccountIds,
                model => model.Accounts.Items,
                fruit => fruit.Value,
                fruit => fruit.Text,
                model => model.Accounts.SelectedItems,
                MvcCheckBoxList.Model.Position.Vertical, x => new { @class = "control-label checkbox-list-loans" })
                @Html.ValidationMessageFor(m => m.Accounts)
        </div>
    </div>
</div>
<div class="col-md-3 form-horizontal">
    <div class="form-group">
        <div class="col-md-10">
            <input type="submit" value="Show" />
        </div>
    </div>
</div>
}
<div class="col-md-6">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4>Loan Summary</h4>
        </div>
        <div class="panel-body">
            <div id="dataTableLoan" style="width: 300px; overflow-x: scroll"></div>
        </div>
    </div>
</div>
<div class="col-md-6">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4>Deposit Summary</h4>
        </div>
        <div class="panel-body">
            <div id="dataTableDeposit" style="width: 300px; overflow-x: scroll"></div>
        </div>
    </div>
</div>
