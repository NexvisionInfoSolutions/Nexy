@model Data.Models.Accounts.sdtoAccountHead

@{
    ViewBag.Title = "Create Account Head";
    
} 

<script src="~/Scripts/Address.js"></script>
<script language="javascript" type="text/javascript">
    var ddlUserAddressCountry = "ddlUserAddressCountry";
    var hdnUserAddressCountry = "hdnUserAddressCountry";

    var ddlUserAddressState = "ddlUserAddressState";
    var hdnUserAddressState = "hdnUserAddressState";

    var ddlUserAddressDistrict = "ddlUserAddressDistrict";
    var hdnUserAddressDistrict = "hdnUserAddressDistrict";

    var ddlUserAddressTaluk = "ddlUserAddressTaluk";
    var hdnUserAddressTaluk = "hdnUserAddressTaluk";

    var ddlUserAddressVillage = "ddlUserAddressVillage";
    var hdnUserAddressVillage = "hdnUserAddressVillage";

    $(document).ready(function () {
        LoadComboBox('@Url.Action("CountryInfo", "Settings")'
                     , "CountryId"
                     , "CountryName"
                     , $('#' + hdnUserAddressCountry).val()
                     , ddlUserAddressCountry);

        $("#" + ddlUserAddressCountry).on('change', function (event) {
            var args = event.args;
            if (args) {
                var item = args.item;
                $("#" + hdnUserAddressCountry).val(item.value);
                LoadComboBox('@Url.Action("StateInfo", "Settings", new { CountryId = 0 })' + $('#' + hdnUserAddressCountry).val()
                     , "StateId"
                     , "StateName"
                     , $('#' + hdnUserAddressState).val()
                     , ddlUserAddressState)
            }
        });

        $("#" + ddlUserAddressState).on('change', function (event) {
            var args = event.args;
            if (args) {
                var item = args.item;
                $("#" + hdnUserAddressState).val(item.value);
                LoadComboBox('@Url.Action("DistrictInfo", "Settings", new { StateId = 0 })' + $('#' + hdnUserAddressState).val()
                     , "DistrictId"
                     , "DistrictName"
                     , $('#' + hdnUserAddressDistrict).val()
                     , ddlUserAddressDistrict)
            }
        });

        $("#" + ddlUserAddressDistrict).on('change', function (event) {
            var args = event.args;
            if (args) {
                var item = args.item;
                $("#" + hdnUserAddressDistrict).val(item.value);
                LoadComboBox('@Url.Action("TalukInfo", "Settings", new { DistrictId = 0 })' + $('#' + hdnUserAddressDistrict).val()
                     , "TalukId"
                     , "TalukName"
                     , $('#' + hdnUserAddressTaluk).val()
                     , ddlUserAddressTaluk)
            }
        });

        $("#" + ddlUserAddressTaluk).on('change', function (event) {
            var args = event.args;
            if (args) {
                var item = args.item;
                $("#" + hdnUserAddressTaluk).val(item.value);
                LoadComboBox('@Url.Action("VillageInfo", "Settings", new { TalukId = 0 })' + $('#' + hdnUserAddressTaluk).val()
                     , "VillageId"
                     , "VillageName"
                     , $('#' + hdnUserAddressVillage).val()
                     , ddlUserAddressVillage)
            }
        });

        $("#" + ddlUserAddressVillage).on('change', function (event) {
            var args = event.args;
            if (args) {
                var item = args.item;
                $("#" + hdnUserAddressVillage).val(item.value);
            }
        });
    });
</script>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
   <div class="col-md-5 form-horizontal">
       @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">

            <div class="col-md-10">
                @Html.LabelFor(model => model.AccountCode, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.AccountCode, new { htmlAttributes = new { @class = "form-control"  } })
                @Html.ValidationMessageFor(model => model.AccountCode, "", new { @class = "text-danger" })
            </div>
        </div>

       <div class="form-group">

           <div class="col-md-10">
               @Html.LabelFor(model => model.AccountName, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.AccountName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccountName, "", new { @class = "text-danger" })
           </div>
       </div>

       <div class="form-group">

           <div class="col-md-10">
               @Html.LabelFor(model => model.ScheduleId, htmlAttributes: new { @class = "control-label " })
                @*@Html.EditorFor(model => model.ScheduleId, new { htmlAttributes = new {  } })*@
                @Html.DropDownListFor(x => x.ScheduleId, (SelectList)ViewBag.ScheduleList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ScheduleId, "", new { @class = "text-danger" })
           </div>
       </div>

       <div class="form-group">

           <div class="col-md-10">
               @Html.LabelFor(model => model.AccountTypeId, htmlAttributes: new { @class = "control-label " })
                @Html.DropDownList("AccountTypeId", (SelectList)ViewBag.AccountTypeList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccountTypeId, "", new { @class = "text-danger" })
           </div>
       </div>

       <div class="form-group">

           <div class="col-md-10">
               @Html.LabelFor(model => model.CreditLimit, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.CreditLimit, new { htmlAttributes = new { @class = "form-control"  } })
                @Html.ValidationMessageFor(model => model.CreditLimit, "", new { @class = "text-danger" })
           </div>
       </div>

       <div class="form-group">

           <div class="col-md-10">
               @Html.LabelFor(model => model.CreditDays, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.CreditDays, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreditDays, "", new { @class = "text-danger" })
           </div>
       </div>

       <div class="form-group">

           <div class="col-md-10">
               @Html.LabelFor(model => model.Contacts.Telephone1, "Telephone", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Contacts.Telephone1, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.ContactPerson.Name, "", new { @class = "text-danger" })*@
           </div>
       </div>

       <div class="form-group">

           <div class="col-md-10">
               @Html.LabelFor(model => model.Contacts.Mobile1, "Mobile", htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Contacts.Mobile1, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.ContactPerson.Name, "", new { @class = "text-danger" })*@
           </div>
       </div>
       <div class="form-group">
           @Html.LabelFor(model => model.Contacts.ContactName, "Contact Person", htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contacts.ContactName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
       </div>
   </div>
<div class="col-md-5 form-horizontal">
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.Address.Address1, "Address1", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Address.Address1, new { @class = "form-control", @placeholder = "Enter Address Line 1" })
                        @Html.ValidationMessageFor(model => model.Address.Address1)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.Address.Address2, "Address2", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Address.Address2, new { @class = "form-control", @placeholder = "Enter Address Line 2" })
                        @Html.ValidationMessageFor(model => model.Address.Address2)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.Address.Place, "Place", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Address.Place, new { @class = "form-control", @placeholder = "Enter Place" })
                        @Html.ValidationMessageFor(model => model.Address.Place)
        </div>
    </div>
    <div class="form-group">

        <div class="col-md-10">
            @Html.LabelFor(model => model.Address.Post, "PO", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Address.Post, new { @class = "form-control", @placeholder = "Enter PO" })
                        @Html.ValidationMessageFor(model => model.Address.Post)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.Address.CountryId, new { @class = "control-label" })
            <div id='ddlUserAddressCountry' class="form-control"></div>
            @Html.HiddenFor(model => model.Address.CountryId, htmlAttributes: new { @class = "form-control", @ID = "hdnUserAddressCountry" })
            @Html.ValidationMessageFor(model => model.Address.CountryId)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.Address.StateId, new { @class = "control-label" })
            <div id='ddlUserAddressState' class="form-control"></div>
            @Html.HiddenFor(model => model.Address.StateId, htmlAttributes: new { @class = "form-control", @ID = "hdnUserAddressState" })
            @Html.ValidationMessageFor(model => model.Address.StateId)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.Address.DistrictId, new { @class = "control-label" })
            <div id='ddlUserAddressDistrict' class="form-control"></div>
            @Html.HiddenFor(model => model.Address.DistrictId, htmlAttributes: new { @class = "form-control", @ID = "hdnUserAddressDistrict" })
            @Html.ValidationMessageFor(model => model.Address.DistrictId)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.Address.TalukId, new { @class = "control-label" })
            <div id='ddlUserAddressTaluk' class="form-control"></div>
            @Html.HiddenFor(model => model.Address.TalukId, htmlAttributes: new { @class = "form-control", @ID = "hdnUserAddressTaluk" })
            @Html.ValidationMessageFor(model => model.Address.TalukId)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.Address.VillageId, new { @class = "control-label" })
            <div id='ddlUserAddressVillage' class="form-control"></div>
            @Html.HiddenFor(model => model.Address.VillageId, htmlAttributes: new { @class = "form-control", @ID = "hdnUserAddressVillage" })
            @Html.ValidationMessageFor(model => model.Address.VillageId)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.TIN, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.TIN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TIN, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">

        <div class="col-md-10">
            @Html.LabelFor(model => model.CST, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.CST, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CST, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
