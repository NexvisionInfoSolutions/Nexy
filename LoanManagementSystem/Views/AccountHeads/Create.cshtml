@model Data.Models.Accounts.sdtoAccountHead

@{
    ViewBag.Title = "Create Account Head";
    
} 

<script language="javascript" type="text/javascript">
    function loadCountryStates(selectedValue, ddlUserAddressState) {
        $.ajax({
            url: '@Url.Action("StateInfo","Settings", new {CountryId = 0 })' + selectedValue,
            type: 'GET',
            //data: { someValue: value },
            success: function (result) {
                // when the AJAX succeeds refresh the dropdown list with 
                // the JSON values returned from the controller action

                var selectedDeviceModel = $('#' + ddlUserAddressState);
                selectedDeviceModel.empty();
                $.each(result, function (index, item) {
                    selectedDeviceModel.append(
                        $('<option/>', {
                            value: item.StateId,
                            text: item.StateName
                        })
                    );
                });
            }
        });
        return false;
    }

</script>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
   <div class="col-md-5 form-horizontal">
       @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">

            <div class="col-md-10">
                @Html.LabelFor(model => model.AccountCode, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.AccountCode, new { htmlAttributes = new { @class = "form-control"  } })
                @Html.ValidationMessageFor(model => model.AccountCode, "", new { @class = "text-danger" })
            </div>
        </div>

       <div class="form-group">

           <div class="col-md-10">
               @Html.LabelFor(model => model.AccountName, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.AccountName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccountName, "", new { @class = "text-danger" })
           </div>
       </div>

       <div class="form-group">

           <div class="col-md-10">
               @Html.LabelFor(model => model.ScheduleId, htmlAttributes: new { @class = "control-label " })
                @*@Html.EditorFor(model => model.ScheduleId, new { htmlAttributes = new {  } })*@
                @Html.DropDownListFor(x => x.ScheduleId, (SelectList)ViewBag.ScheduleList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ScheduleId, "", new { @class = "text-danger" })
           </div>
       </div>

       <div class="form-group">

           <div class="col-md-10">
               @Html.LabelFor(model => model.AccountTypeId, htmlAttributes: new { @class = "control-label " })
                @Html.DropDownList("AccountTypeId", (SelectList)ViewBag.AccountTypeList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccountTypeId, "", new { @class = "text-danger" })
           </div>
       </div>

       <div class="form-group">

           <div class="col-md-10">
               @Html.LabelFor(model => model.CreditLimit, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.CreditLimit, new { htmlAttributes = new { @class = "form-control"  } })
                @Html.ValidationMessageFor(model => model.CreditLimit, "", new { @class = "text-danger" })
           </div>
       </div>

       <div class="form-group">

           <div class="col-md-10">
               @Html.LabelFor(model => model.CreditDays, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.CreditDays, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreditDays, "", new { @class = "text-danger" })
           </div>
       </div>

       <div class="form-group">

           <div class="col-md-10">
               @Html.LabelFor(model => model.Contacts.Telephone1, "Telephone", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Contacts.Telephone1, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.ContactPerson.Name, "", new { @class = "text-danger" })*@
           </div>
       </div>

       <div class="form-group">

           <div class="col-md-10">
               @Html.LabelFor(model => model.Contacts.Mobile1, "Mobile", htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Contacts.Mobile1, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.ContactPerson.Name, "", new { @class = "text-danger" })*@
           </div>
       </div>
       <div class="form-group">
           @Html.LabelFor(model => model.Contacts.ContactName, "Contact Person", htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contacts.ContactName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
       </div>
   </div>
<div class="col-md-5 form-horizontal">
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.Address.Address1, "Address1", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Address.Address1, new { @class = "form-control", @placeholder = "Enter Address Line 1" })
                        @Html.ValidationMessageFor(model => model.Address.Address1)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.Address.Address2, "Address2", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Address.Address2, new { @class = "form-control", @placeholder = "Enter Address Line 2" })
                        @Html.ValidationMessageFor(model => model.Address.Address2)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.Address.Place, "Place", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Address.Place, new { @class = "form-control", @placeholder = "Enter Place" })
                        @Html.ValidationMessageFor(model => model.Address.Place)
        </div>
    </div>
    <div class="form-group">

        <div class="col-md-10">
            @Html.LabelFor(model => model.Address.Post, "PO", new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Address.Post, new { @class = "form-control", @placeholder = "Enter PO" })
                        @Html.ValidationMessageFor(model => model.Address.Post)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.Address.Taluk , new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Address.Taluk, new { @class = "form-control", @placeholder = "Enter Taluk" })
                        @Html.ValidationMessageFor(model => model.Address.Taluk)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.Address.Village, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.Address.Village, new { @class = "form-control", @placeholder = "Enter Village" })
            @Html.ValidationMessageFor(model => model.Address.Village)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.Address.CountryId , "Country", new { @class = "control-label" })
                        @Html.DropDownListFor(model=>model.Address.CountryId, (SelectList)ViewBag.UserAddressCountryList, htmlAttributes: new { @class = "form-control",  @ID = "ddlUserAddressCountry" , onchange = "return loadCountryStates(this.options[this.selectedIndex].value, 'ddlUserAddressState');" })
                        @Html.ValidationMessageFor(model => model.Address.CountryId)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.Address.StateId , "State", new { @class = "control-label" })
                        @Html.DropDownListFor(model=>model.Address.StateId, (SelectList)ViewBag.StateList, htmlAttributes: new { @class = "form-control",  @ID = "ddlUserAddressState" })
                        @Html.ValidationMessageFor(model => model.Address.StateId)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.TIN, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.TIN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TIN, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">

        <div class="col-md-10">
            @Html.LabelFor(model => model.CST, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.CST, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CST, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
