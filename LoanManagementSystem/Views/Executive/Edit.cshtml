@model LoanManagementSystem.Models.sdtoUser

@{
    ViewBag.Title = "Edit Executives";

}

<script src="~/Scripts/Address.js"></script>
<script language="javascript" type="text/javascript">
    var ddlUserAddressCountry = "ddlUserAddressCountry";
    var hdnUserAddressCountry = "hdnUserAddressCountry";

    var ddlUserAddressState = "ddlUserAddressState";
    var hdnUserAddressState = "hdnUserAddressState";

    var ddlUserAddressDistrict = "ddlUserAddressDistrict";
    var hdnUserAddressDistrict = "hdnUserAddressDistrict";

    var ddlUserAddressTaluk = "ddlUserAddressTaluk";
    var hdnUserAddressTaluk = "hdnUserAddressTaluk";

    var ddlUserAddressVillage = "ddlUserAddressVillage";
    var hdnUserAddressVillage = "hdnUserAddressVillage";

    $(document).ready(function () {
        LoadComboBox('@Url.Action("CountryInfo", "Settings")'
                     , "CountryId"
                     , "CountryName"
                     , $('#' + hdnUserAddressCountry).val()
                     , ddlUserAddressCountry);

        $("#" + ddlUserAddressCountry).on('change', function (event) {
            var args = event.args;
            if (args) {
                var item = args.item;
                $("#" + hdnUserAddressCountry).val(item.value);
                LoadComboBox('@Url.Action("StateInfo", "Settings", new { CountryId = 0 })' + $('#' + hdnUserAddressCountry).val()
                     , "StateId"
                     , "StateName"
                     , $('#' + hdnUserAddressState).val()
                     , ddlUserAddressState)
            }
        });

        $("#" + ddlUserAddressState).on('change', function (event) {
            var args = event.args;
            if (args) {
                var item = args.item;
                $("#" + hdnUserAddressState).val(item.value);
                LoadComboBox('@Url.Action("DistrictInfo", "Settings", new { StateId = 0 })' + $('#' + hdnUserAddressState).val()
                     , "DistrictId"
                     , "DistrictName"
                     , $('#' + hdnUserAddressDistrict).val()
                     , ddlUserAddressDistrict)
            }
        });

        $("#" + ddlUserAddressDistrict).on('change', function (event) {
            var args = event.args;
            if (args) {
                var item = args.item;
                $("#" + hdnUserAddressDistrict).val(item.value);
                LoadComboBox('@Url.Action("TalukInfo", "Settings", new { DistrictId = 0 })' + $('#' + hdnUserAddressDistrict).val()
                     , "TalukId"
                     , "TalukName"
                     , $('#' + hdnUserAddressTaluk).val()
                     , ddlUserAddressTaluk)
            }
        });

        $("#" + ddlUserAddressTaluk).on('change', function (event) {
            var args = event.args;
            if (args) {
                var item = args.item;
                $("#" + hdnUserAddressTaluk).val(item.value);
                LoadComboBox('@Url.Action("VillageInfo", "Settings", new { TalukId = 0 })' + $('#' + hdnUserAddressTaluk).val()
                     , "VillageId"
                     , "VillageName"
                     , $('#' + hdnUserAddressVillage).val()
                     , ddlUserAddressVillage)
            }
        });

        $("#" + ddlUserAddressVillage).on('change', function (event) {
            var args = event.args;
            if (args) {
                var item = args.item;
                $("#" + hdnUserAddressVillage).val(item.value);
            }
        });
    });
</script>

@*<h2>Edit Executives</h2>*@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.UserID)
        @Html.HiddenFor(model => model.CreatedBy)
        @Html.HiddenFor(model => model.CreatedOn)
        @Html.HiddenFor(model => model.IsDeleted)
        @Html.HiddenFor(model => model.UserContactId)
        @Html.HiddenFor(model => model.UserAddressId)
        @Html.HiddenFor(model => model.CompanyId)
        @Html.HiddenFor(model => model.GuaranterAddressId)
        @Html.HiddenFor(model => model.GuaranterContactId)
        @Html.HiddenFor(model => model.PermanentAddressId)
        @Html.HiddenFor(model => model.PermanentContactId)
        @Html.HiddenFor(model => model.UserGroupId)

        @Html.HiddenFor(model => model.UserAddressId)
        @Html.HiddenFor(model => model.UserAddress.AddressId)
        @Html.HiddenFor(model => model.UserContactId)
        @Html.HiddenFor(model => model.Contacts.ContactId)

        <div class="col-md-5">
            @Html.ValidationSummary(true)

            <div class="form-group">

                <div class="col-md-10">
                    @Html.LabelFor(model => model.Code, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Code, new { @class = "form-control", @placeholder = "Enter Code" })
                    @Html.ValidationMessageFor(model => model.Code)
                </div>
            </div>

            <div class="form-group">

                <div class="col-md-10">
                    @Html.LabelFor(model => model.FirstName, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @placeholder = "Enter First Name" })
                    @Html.ValidationMessageFor(model => model.FirstName)
                </div>
            </div>
            <div class="form-group">

                <div class="col-md-10">
                    @Html.LabelFor(model => model.LastName, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @placeholder = "Enter Last Name" })
                    @Html.ValidationMessageFor(model => model.LastName)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.Designation, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Designation, new { @class = "form-control", @placeholder = "Enter Designation" })
                    @Html.ValidationMessageFor(model => model.Designation)
                </div>
            </div>
            <div class="form-group">

                <div class="col-md-10">
                    @Html.LabelFor(model => model.Contacts.Telephone1, "Telephone", htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Contacts.Telephone1, new { @class = "form-control", @placeholder = "Enter Telephone" })
                    @*@Html.ValidationMessageFor(model => model.ContactPerson.Name, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">

                <div class="col-md-10">
                    @Html.LabelFor(model => model.Contacts.Mobile1, "Mobile", htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Contacts.Mobile1, new { @class = "form-control", @placeholder = "Enter Mobile" })
                    @*@Html.ValidationMessageFor(model => model.ContactPerson.Name, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.UserAddress.Address1, "Address1", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.UserAddress.Address1, new { @class = "form-control", @placeholder = "Enter Address Line 1" })
                    @Html.ValidationMessageFor(model => model.UserAddress.Address1)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.UserAddress.Address2, "Address2", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.UserAddress.Address2, new { @class = "form-control", @placeholder = "Enter Address Line 2" })
                    @Html.ValidationMessageFor(model => model.UserAddress.Address2)
                </div>
            </div>
        </div>
        <div class="col-md-5">
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.UserAddress.Place, "Place", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.UserAddress.Place, new { @class = "form-control", @placeholder = "Enter Place" })
                    @Html.ValidationMessageFor(model => model.UserAddress.Place)
                </div>
            </div>
            <div class="form-group">

                <div class="col-md-10">
                    @Html.LabelFor(model => model.UserAddress.Post, "PO", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.UserAddress.Post, new { @class = "form-control", @placeholder = "Enter PO" })
                    @Html.ValidationMessageFor(model => model.UserAddress.Post)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.UserAddress.CountryId, new { @class = "control-label" })
                    <div id='ddlUserAddressCountry' class="form-control"></div>
                    @Html.HiddenFor(model => model.UserAddress.CountryId, htmlAttributes: new { @class = "form-control", @ID = "hdnUserAddressCountry" })
                    @Html.ValidationMessageFor(model => model.UserAddress.CountryId)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.UserAddress.StateId, new { @class = "control-label" })
                    <div id='ddlUserAddressState' class="form-control"></div>
                    @Html.HiddenFor(model => model.UserAddress.StateId, htmlAttributes: new { @class = "form-control", @ID = "hdnUserAddressState" })
                    @Html.ValidationMessageFor(model => model.UserAddress.StateId)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.UserAddress.DistrictId, new { @class = "control-label" })
                    <div id='ddlUserAddressDistrict' class="form-control"></div>
                    @Html.HiddenFor(model => model.UserAddress.DistrictId, htmlAttributes: new { @class = "form-control", @ID = "hdnUserAddressDistrict" })
                    @Html.ValidationMessageFor(model => model.UserAddress.DistrictId)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.UserAddress.TalukId, new { @class = "control-label" })
                    <div id='ddlUserAddressTaluk' class="form-control"></div>
                    @Html.HiddenFor(model => model.UserAddress.TalukId, htmlAttributes: new { @class = "form-control", @ID = "hdnUserAddressTaluk" })
                    @Html.ValidationMessageFor(model => model.UserAddress.TalukId)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.UserAddress.VillageId, new { @class = "control-label" })
                    <div id='ddlUserAddressVillage' class="form-control"></div>
                    @Html.HiddenFor(model => model.UserAddress.VillageId, htmlAttributes: new { @class = "form-control", @ID = "hdnUserAddressVillage" })
                    @Html.ValidationMessageFor(model => model.UserAddress.VillageId)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
