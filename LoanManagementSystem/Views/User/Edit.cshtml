@model LoanManagementSystem.Models.sdtoUser

@{
    ViewBag.Title = "Edit User";
}

@*<h2>Create User</h2>*@


@using (Html.BeginForm("Edit", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.UserID)
    @Html.HiddenFor(model => model.CreatedBy)
    @Html.HiddenFor(model => model.CreatedOn)
    @Html.HiddenFor(model => model.IsDeleted)
    @Html.HiddenFor(model => model.UserContactId)
    @Html.HiddenFor(model => model.UserAddressId)
    @Html.HiddenFor(model => model.CompanyId)
    @Html.HiddenFor(model => model.GuaranterAddressId)
    @Html.HiddenFor(model => model.GuaranterContactId)
    @Html.HiddenFor(model => model.PermanentAddressId)
    @Html.HiddenFor(model => model.PermanentContactId)
    @Html.HiddenFor(model => model.UserGroupId)

    <div class="col-md-5 form-horizontal">
        @Html.ValidationSummary(true)
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(m => m.Code)
                @Html.TextBoxFor(m => m.Code, new { @class = "form-control", @placeholder = "Enter code" })
                @Html.ValidationMessageFor(m => m.Code)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.UserName)
                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @placeholder = "Enter username" })
                @Html.ValidationMessageFor(model => model.UserName)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.Password)
                @Html.PasswordFor(model => model.Password, new { @class = "form-control", @placeholder = "Enter Password", @value = @Model.Password })
                @Html.ValidationMessageFor(model => model.Password)
            </div>
        </div>
        @*<div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.ConfirmPassword)
                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", @placeholder = "Enter Confirm Password" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword)
                </div>
            </div>*@
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.UserGroupId)
                @Html.DropDownListFor(model => model.UserGroupId, (SelectList)ViewBag.UserGroupList, htmlAttributes: new { @class = "form-control", @placeholder = "Select User Group" })
                @Html.ValidationMessageFor(model => model.UserGroupId)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.Description)
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @placeholder = "Enter description" })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>
    </div>
    <div class="col-md-5">
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.FirstName)
                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @placeholder = "Enter First Name" })
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.LastName)
                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @placeholder = "Enter Last Name" })
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.Label("Profile Image")
                @if (File.Exists(Server.MapPath("~/").Trim("\\/ ".ToCharArray()) + "\\ContentUpload\\User\\Profile\\" + @Model.UserID + ".logo"))
                {
                    @*<div class="form-group">
                        <div class="col-md-10">*@
                    <img src="~/Utility/ProfileImage?UserId=@Model.UserID" alt="Profile Image" style="width:200px; height:200px" class="form-control" />
                    @*</div>
                        </div>*@
                }
                <input name="ProfileImage" type="file" class="form-control" />
            </div>
        </div>
       
        <div class="form-group center-block">
            <div class="col-md-7">
            </div>
            <div class="col-md-3">
            </div>
        </div>
        <div class="form-group center-block">
            <div class="col-md-7">
            </div>
            <div class="col-md-3">
                <button type="submit" class="btn btn-default">Submit</button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
